-- FORTH-83  cElEBOj ACCEMblEP           14.02.86
HEX VOCABULARY ASSEMBLER
        ASSEMBLER DEFINITIONS                  -AR
: 8* 2*  2* 2* ;                               +AR
4 CONSTANT H  5 CONSTANT L 7 CONSTANT A  6 CONSTANT PSW
2 CONSTANT D  3 CONSTANT E 0 CONSTANT B  1 CONSTANT C
6 CONSTANT M  6 CONSTANT SP                    -AR
-COMP  : 1MI CREATE  C, DOES> C@ C, ;
-COMP  : 2MI CREATE  C, DOES> C@ + C, ;
-COMP  : 3MI CREATE  C, DOES> C@ SWAP 8* + C, ;
-COMP  : 4MI CREATE  C, DOES> C@ C, C,   ;
-COMP  : 5MI CREATE  C, DOES> C@ C,  ,   ;
DECIMAL
10 CONSTANT FRMAX ( MAKC. ~iClO CCylOK BpEPEd)
   VARIABLE FRTABLE FRMAX 2* 2*  ALLOT
10 CONSTANT LBLMAX ( MAKC. ~iClO lOKAlxHyX METOK)
   VARIABLE LTABLE  LBLMAX 1+ 2* ALLOT
: FRCHK   ( pPOBEPKA HEPAzPE{EHHyX CCylOK BpEPEd )
          FRMAX 0 DO I 2* 2* FRTABLE + @
                   ABORT" ECTx HEPAzPE{EHHAq CCylKA BpEPEd"
                  LOOP ;
: FRCLR   ( iHiciAlizAciq TAblicy CCylOK BpEPEd )
          FRTABLE FRMAX 2* 2* ERASE
          LTABLE LBLMAX 1+ 2* ERASE ;
: FRRES   ( PAzPE{EHiE CCylOK BpEPEd )
          FRMAX 0 DO  I 2* 2* FRTABLE + 2DUP @ =
          [ FORTH ] IF HERE OVER 2+ @ +! 0!
                    ELSE DROP THEN
      [ ASSEMBLER ] LOOP ;
: FRADD   ( dObABlEHiE CCylKi BpEPEd B TAblicu )
          FRMAX 1+ 0
          DO FRMAX I = ABORT" Cli{KOM MHOgO CCylOK BpEPEd"
             I 2* 2* FRTABLE + DUP @ [ FORTH ] 0=
             IF 2DUP ! HERE 1+ SWAP 2+ ! LEAVE
             ELSE DROP THEN          [ ASSEMBLER ]
          LOOP ;
 -- OpPEdElq`}iE BXOvdEHiq METOK
: !LT     CREATE ,
          DOES> @  FRRES HERE SWAP 2* LTABLE + ! ;
 -- iCpOlxzu`}iE BXOvdEHiq METOK
: @LT     CREATE , DOES> @ DUP 2*
          LTABLE + @ SWAP OVER [ FORTH ] 0=
          IF [ ASSEMBLER ] FRADD [ FORTH ]
          THEN [ ASSEMBLER ] DROP ;          +AR
1 !LT 1#:   2 !LT 2#:  3 !LT 3#:  4 !LT 4#:  5 !LT  5#:
6 !LT 6#:   7 !LT 7#:  8 !LT 8#:  9 !LT 9#: 10 !LT 10#:
1 @LT 1#    2 @LT 2#   3 @LT 3#   4 @LT 4#   5 @LT  5#
6 @LT 6#    7 @LT 7#   8 @LT 8#   9 @LT 9#  10 @LT 10#
--
HEX
00 1MI NOP   76 1MI HLT   F3 1MI DI    FB 1MI EI
07 1MI RLC   0F 1MI RRC   17 1MI RAL   1F 1MI RAR
E9 1MI PCHL  F9 1MI SPHL  E3 1MI XTHL  EB 1MI XCHG
27 1MI DAA   2F 1MI CMA   37 1MI STC   3F 1MI CMC
80 2MI ADD   88 2MI ADC   90 2MI SUB   98 2MI SBB
A0 2MI ANA   A8 2MI XRA   B0 2MI ORA   B8 2MI CMP
09 3MI DAD   C1 3MI POP   C5 3MI PUSH  02 3MI STAX
0A 3MI LDAX  04 3MI INR   05 3MI DCR   03 3MI INX
0B 3MI DCX   C7 3MI RST   D3 4MI OUT   DB 4MI IN
C6 4MI ADI   CE 4MI ACI   D6 4MI SUI   DE 4MI SBI
E6 4MI ANI   EE 4MI XRI   F6 4MI ORI   FE 4MI CPI
22 5MI SHLD  2A 5MI LHLD  32 5MI STA   3A 5MI LDA
C4 5MI CNZ  0CC 5MI CZ    D4 5MI CNC   DC 5MI CC
E4 5MI CPO   EC 5MI CPE   F4 5MI CP    FC 5MI CM
CD 5MI CALL  C9 1MI RET   C3 5MI JMP
C0 1MI RNZ   C8 1MI RZ    D0 1MI RNC   D8 1MI RC
E0 1MI RPO   E8 1MI RPE   F0 1MI RP    F8 1MI RM
C2 5MI JNZ   CA 5MI JZ    D2 5MI JNC   DA 5MI JC
E2 5MI JPO   EA 5MI JPE   F2 5MI JP    FA 5MI JM
--
: MOV SWAP 8* 40 + + C, ;
: MVI SWAP 8* 6  + C, C, ;
: LXI SWAP 8* 1 + C, , ;
--
C2 CONSTANT 0=   D2 CONSTANT CS
E2 CONSTANT PE  F2 CONSTANT 0<
--
: NOT    8 + ;
: THEN   2 ?PAIRS HERE SWAP ! ;
: IF     C, HERE 0 , 2 ;
: ELSE   2 ?PAIRS 0C3 [COMPILE] IF ROT SWAP
         [COMPILE] THEN  2 ;
: BEGIN  HERE 1 ;
: UNTIL  SWAP 1 ?PAIRS C, , ;
: AGAIN  1 ?PAIRS [COMPILE] JMP ;
: WHILE  [COMPILE] IF 2 + ;
: REPEAT >R >R [COMPILE] AGAIN R> R> 2 - [COMPILE] THEN ;
            FORTH DEFINITIONS
: BEG-ASM [ ASSEMBLER ] FRCLR [ FORTH ] ASSEMBLER !CSP ;
: END-ASM [ ASSEMBLER ] FRCHK [ FORTH ] ?CSP
          CURRENT @ CONTEXT ! ;
: CODE    CREATE  SMUDGE CFL NEGATE ALLOT
          [COMPILE] BEG-ASM ;
: ;CODE   ?COMP COMPILE (DOES>)
          [COMPILE] BEG-ASM [COMPILE] [ ;        IMMEDIATE
: END-CODE SMUDGE [COMPILE] END-ASM ;
: LABEL   VARIABLE -2 ALLOT SMUDGE [COMPILE] BEG-ASM ;
        ASSEMBLER DEFINITIONS
: NEXT;  NEXT [COMPILE] JMP [COMPILE] END-CODE ;
FORTHDS 0B + ' H  2- !
END-VOC: ASSEMBLER
        FORTH DEFINITIONS
--
;J
